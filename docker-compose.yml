version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: kafka
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    hostname: kafka
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "FIO:1:1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  kafka-ui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
    ports:
      - 8092:8080
    restart: always
    links:
      - zookeeper
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

  postgres:
    image: postgres:alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  redis:
    image: redis:alpine
    ports:
      - 6379:6379

  # consumer:
  #   depends_on:
  #     - postgres
  #     - redis
  #   build:
  #     context: .
  #     dockerfile: cmd/consumer/Dockerfile
  #   links:
  #     - postgres
  #     - redis

  # producer:
  #   depends_on:
  #     - postgres
  #     - redis
  #   build:
  #     context: .
  #     dockerfile: cmd/producer/Dockerfile
  #   links:
  #     - postgres
  #     - redis

  # rester:
  #   depends_on:
  #     - postgres
  #     - redis
  #   build:
  #     context: .
  #     dockerfile: cmd/rester/Dockerfile
  #   links:
  #     - postgres
  #     - redis

  # grapher:
  #   depends_on:
  #     - postgres
  #     - redis
  #   build:
  #     context: .
  #     dockerfile: cmd/grapher/Dockerfile
  #   links:
  #     - postgres
  #     - redis
